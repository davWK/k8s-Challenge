name: K8s Challenge CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
    PROJECT_ID: ${{ secrets.GKE_PROJECT }}
    GKE_CLUSTER: autopilot-cluster-1 
    DEPLOYMENT_NAME: your-deployment-name
    GKE_REGION: us-central1
    REPOSITORY: alilikpo
    IMAGE: k8s-challenge-app

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
        contents: 'read'
        id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
          project_id: ${{ secrets.GKE_PROJECT }}
          workload_identity_provider: 'projects/${{ secrets.GKE_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/github-pool/providers/github-provider'    
          service_account: 'k8s-challenge@${{ secrets.GKE_PROJECT }}.iam.gserviceaccount.com'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Google Cloud SDK
      run: |
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        sudo apt-get install apt-transport-https ca-certificates -y
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
        sudo apt-get update && sudo apt-get install google-cloud-sdk -y

    - name: List Google Cloud Projects
      run: |
        gcloud auth list
        gcloud projects list

    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_REGION }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/$IMAGE:${{ github.sha }}

    - name: Deploy to GKE
      run: |
        kubectl set image deployment/$DEPLOYMENT_NAME ${{ secrets.DOCKER_USERNAME }}/$IMAGE:${{ github.sha }}
